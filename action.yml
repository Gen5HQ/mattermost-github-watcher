name: "Post merged PRs to Mattermost"
description: "List merged PRs in the last N hours for the current repository and post to Mattermost (includes diff stats by default)"
branding:
  icon: send
  color: blue

inputs:
  mattermost_webhook_url:
    description: "Incoming webhook URL for Mattermost"
    required: true
  gh_token:
    description: "GitHub token (usually secrets.GITHUB_TOKEN)"
    required: true
  hours:
    description: "How many hours back to search for merged PRs (default: 24)"
    required: false
    default: "24"
  skip_if_no_prs:
    description: "If 'true', do not post to Mattermost when there are no merged PRs (default: false)"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Get merged PRs (last N hours)
      id: pr_list
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
      run: |
        set -euo pipefail

        hours="${{ inputs.hours }}"
        merged_since="$(date -d "${hours} hours ago" -u +'%Y-%m-%dT%H:%M:%SZ')"

        # additions,deletions をまとめて取得（gh pr list の --json に含める）
        prs_json="$(gh pr list \
          --repo "$GITHUB_REPOSITORY" \
          --state merged \
          --search "merged:>=$merged_since" \
          --json number,title,url,author,additions,deletions)"

        if [ "$(echo "$prs_json" | jq 'length')" -eq 0 ]; then
          # multiline output を安全に扱うため heredoc 形式で出力
          echo "text<<EOF" >> "$GITHUB_OUTPUT"
          echo "過去${hours}時間でマージされたPRはありません" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "has_prs=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        lines=""
        while IFS= read -r row; do
          num="$(echo "$row" | jq -r .number)"
          title="$(echo "$row" | jq -r .title)"
          url="$(echo "$row" | jq -r .url)"
          author="$(echo "$row" | jq -r .author.login)"
          additions="$(echo "$row" | jq -r .additions // 0)"
          deletions="$(echo "$row" | jq -r .deletions // 0)"
          lines+="- #${num} [${title}](${url}) by **${author}** (+${additions} -${deletions})"$'\n'
        done < <(echo "$prs_json" | jq -c '.[]')

        # 末尾の改行を取りつつメッセージ本体を作る
        summary="✅ 過去${hours}時間でマージされたPR一覧:"
        # lines の末尾改行を取り除く
        lines="${lines%$'\n'}"
        text="${summary}\n${lines}"

        # GITHUB_OUTPUT に multiline で安全に書き込む
        echo "text<<EOF" >> "$GITHUB_OUTPUT"
        printf '%s\n' "$text" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        echo "has_prs=true" >> "$GITHUB_OUTPUT"

    - name: Post PR list to Mattermost
      # 投稿は skip_if_no_prs が 'false' のとき（常に投稿）または has_prs が 'true' のときのみ
      if: ${{ inputs.skip_if_no_prs != 'true' || steps.pr_list.outputs.has_prs == 'true' }}
      shell: bash
      env:
        MATTERMOST_WEBHOOK_URL: ${{ inputs.mattermost_webhook_url }}
      run: |
        set -euo pipefail

        # steps.pr_list.outputs.text は multiline のまま受け取れる
        text="${{ steps.pr_list.outputs.text }}"

        # jq による安全な JSON 組み立て（改行・クォートを正しくエスケープ）
        payload="$(jq -n --arg text "$text" '{text: $text}')"

        # curl は失敗時にエラーにする
        curl -fS -X POST -H 'Content-Type: application/json' -d "$payload" "$MATTERMOST_WEBHOOK_URL"
