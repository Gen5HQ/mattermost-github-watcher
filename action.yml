name: "Post merged PRs to Mattermost"
description: "List merged PRs in the last N hours for the current repository and post to Mattermost (includes diff stats by default)"
branding:
  icon: send
  color: blue

inputs:
  mattermost_webhook_url:
    description: "Incoming webhook URL for Mattermost"
    required: true
  gh_token:
    description: "GitHub token (usually secrets.GITHUB_TOKEN)"
    required: true
  hours:
    description: "How many hours back to search for merged PRs (default: 24)"
    required: false
    default: "24"
  skip_if_no_prs:
    description: "If 'true', do not post to Mattermost when there are no merged PRs (default: false)"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Get merged PRs (last N hours)
      id: pr_list
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
      run: |
        set -euo pipefail

        hours="${{ inputs.hours }}"
        merged_since="$(date -d "${hours} hours ago" -u +'%Y-%m-%dT%H:%M:%SZ')"

        prs_json="$(gh pr list \
          --repo "$GITHUB_REPOSITORY" \
          --state merged \
          --search "merged:>=$merged_since" \
          --json number,title,url,author)"

        if [ "$(echo "$prs_json" | jq 'length')" -eq 0 ]; then
          echo "text=過去${hours}時間でマージされたPRはありません" >> "$GITHUB_OUTPUT"
          echo "has_prs=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        # リンクテキスト用のエスケープ関数（\, [, ]）
        md_escape_link_text() {
          sed -e 's/\\/\\\\/g' -e 's/\[/\\[/g' -e 's/\]/\\]/g'
        }

        lines=""
        while IFS= read -r row; do
          num="$(echo "$row" | jq -r .number)"
          raw_title="$(echo "$row" | jq -r .title)"
          # タイトルの改行はスペースに潰す（Mattermostのレイアウト崩れ防止）
          raw_title_one="$(printf '%s' "$raw_title" | tr '\r\n' '  ')"
          title="$(printf '%s' "$raw_title_one" | md_escape_link_text)"
          url="$(echo "$row" | jq -r .url)"
          author="$(echo "$row" | jq -r .author.login)"
          additions="$(gh api "repos/$GITHUB_REPOSITORY/pulls/$num" --jq .additions)"
          deletions="$(gh api "repos/$GITHUB_REPOSITORY/pulls/$num" --jq .deletions)"
          lines+="- #${num} [${title}](${url}) by **${author}** (+${additions} -${deletions})"$'\n'
        done < <(echo "$prs_json" | jq -c '.[]')

        text="✅ 過去${hours}時間でマージされたPR一覧:\n${lines}"
        # そのまま改行を含む文字列を GITHUB_OUTPUT に渡す
        # （改行を \n に置換しない）
        {
          echo "text<<'__EOT__'"
          printf "%s" "$text"
          echo
          echo "__EOT__"
        } >> "$GITHUB_OUTPUT"
        echo "has_prs=true" >> "$GITHUB_OUTPUT"

    - name: Post PR list to Mattermost
      if: ${{ inputs.skip_if_no_prs != 'true' || steps.pr_list.outputs.has_prs == 'true' }}
      shell: bash
      env:
        MATTERMOST_WEBHOOK_URL: ${{ inputs.mattermost_webhook_url }}
      run: |
        # JSONのエスケープは jq に任せる
        jq -n --arg text "${{ steps.pr_list.outputs.text }}" '{text:$text}' \
          | curl -sS -X POST -H 'Content-Type: application/json' -d @- "$MATTERMOST_WEBHOOK_URL"


    - name: Post PR list to Mattermost
      # 投稿は以下の条件で実行:
      # - skip_if_no_prs が 'false' のとき（常に投稿）
      # - または has_prs が 'true' のとき（PR がある場合のみ投稿）
      if: ${{ inputs.skip_if_no_prs != 'true' || steps.pr_list.outputs.has_prs == 'true' }}
      shell: bash
      env:
        MATTERMOST_WEBHOOK_URL: ${{ inputs.mattermost_webhook_url }}
      run: |
        payload="{\"text\":\"${{ steps.pr_list.outputs.text }}\"}"
        curl -X POST -H 'Content-Type: application/json' -d "$payload" "$MATTERMOST_WEBHOOK_URL"
